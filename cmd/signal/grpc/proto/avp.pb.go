// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: cmd/signal/grpc/proto/avp.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RecordConfig_Format int32

const (
	RecordConfig_WEBM RecordConfig_Format = 0
)

// Enum value maps for RecordConfig_Format.
var (
	RecordConfig_Format_name = map[int32]string{
		0: "WEBM",
	}
	RecordConfig_Format_value = map[string]int32{
		"WEBM": 0,
	}
)

func (x RecordConfig_Format) Enum() *RecordConfig_Format {
	p := new(RecordConfig_Format)
	*p = x
	return p
}

func (x RecordConfig_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordConfig_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_signal_grpc_proto_avp_proto_enumTypes[0].Descriptor()
}

func (RecordConfig_Format) Type() protoreflect.EnumType {
	return &file_cmd_signal_grpc_proto_avp_proto_enumTypes[0]
}

func (x RecordConfig_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordConfig_Format.Descriptor instead.
func (RecordConfig_Format) EnumDescriptor() ([]byte, []int) {
	return file_cmd_signal_grpc_proto_avp_proto_rawDescGZIP(), []int{5, 0}
}

type RecordConfig_Audio int32

const (
	RecordConfig_AUDIO_OFF    RecordConfig_Audio = 0
	RecordConfig_AUDIO_MONO   RecordConfig_Audio = 1
	RecordConfig_AUDIO_STEREO RecordConfig_Audio = 2
)

// Enum value maps for RecordConfig_Audio.
var (
	RecordConfig_Audio_name = map[int32]string{
		0: "AUDIO_OFF",
		1: "AUDIO_MONO",
		2: "AUDIO_STEREO",
	}
	RecordConfig_Audio_value = map[string]int32{
		"AUDIO_OFF":    0,
		"AUDIO_MONO":   1,
		"AUDIO_STEREO": 2,
	}
)

func (x RecordConfig_Audio) Enum() *RecordConfig_Audio {
	p := new(RecordConfig_Audio)
	*p = x
	return p
}

func (x RecordConfig_Audio) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordConfig_Audio) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_signal_grpc_proto_avp_proto_enumTypes[1].Descriptor()
}

func (RecordConfig_Audio) Type() protoreflect.EnumType {
	return &file_cmd_signal_grpc_proto_avp_proto_enumTypes[1]
}

func (x RecordConfig_Audio) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordConfig_Audio.Descriptor instead.
func (RecordConfig_Audio) EnumDescriptor() ([]byte, []int) {
	return file_cmd_signal_grpc_proto_avp_proto_rawDescGZIP(), []int{5, 1}
}

type RecordConfig_Video int32

const (
	RecordConfig_VIDEO_OFF RecordConfig_Video = 0
	RecordConfig_VIDEO_ON  RecordConfig_Video = 1
)

// Enum value maps for RecordConfig_Video.
var (
	RecordConfig_Video_name = map[int32]string{
		0: "VIDEO_OFF",
		1: "VIDEO_ON",
	}
	RecordConfig_Video_value = map[string]int32{
		"VIDEO_OFF": 0,
		"VIDEO_ON":  1,
	}
)

func (x RecordConfig_Video) Enum() *RecordConfig_Video {
	p := new(RecordConfig_Video)
	*p = x
	return p
}

func (x RecordConfig_Video) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordConfig_Video) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_signal_grpc_proto_avp_proto_enumTypes[2].Descriptor()
}

func (RecordConfig_Video) Type() protoreflect.EnumType {
	return &file_cmd_signal_grpc_proto_avp_proto_enumTypes[2]
}

func (x RecordConfig_Video) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordConfig_Video.Descriptor instead.
func (RecordConfig_Video) EnumDescriptor() ([]byte, []int) {
	return file_cmd_signal_grpc_proto_avp_proto_rawDescGZIP(), []int{5, 2}
}

type SignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//	*SignalRequest_Process
	//	*SignalRequest_RecordStart
	//	*SignalRequest_RecordStop
	Payload isSignalRequest_Payload `protobuf_oneof:"payload"`
}

func (x *SignalRequest) Reset() {
	*x = SignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_signal_grpc_proto_avp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalRequest) ProtoMessage() {}

func (x *SignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_signal_grpc_proto_avp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalRequest.ProtoReflect.Descriptor instead.
func (*SignalRequest) Descriptor() ([]byte, []int) {
	return file_cmd_signal_grpc_proto_avp_proto_rawDescGZIP(), []int{0}
}

func (m *SignalRequest) GetPayload() isSignalRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *SignalRequest) GetProcess() *Process {
	if x, ok := x.GetPayload().(*SignalRequest_Process); ok {
		return x.Process
	}
	return nil
}

func (x *SignalRequest) GetRecordStart() *RecordStart {
	if x, ok := x.GetPayload().(*SignalRequest_RecordStart); ok {
		return x.RecordStart
	}
	return nil
}

func (x *SignalRequest) GetRecordStop() *RecordStop {
	if x, ok := x.GetPayload().(*SignalRequest_RecordStop); ok {
		return x.RecordStop
	}
	return nil
}

type isSignalRequest_Payload interface {
	isSignalRequest_Payload()
}

type SignalRequest_Process struct {
	Process *Process `protobuf:"bytes,1,opt,name=process,proto3,oneof"`
}

type SignalRequest_RecordStart struct {
	RecordStart *RecordStart `protobuf:"bytes,2,opt,name=recordStart,proto3,oneof"`
}

type SignalRequest_RecordStop struct {
	RecordStop *RecordStop `protobuf:"bytes,3,opt,name=recordStop,proto3,oneof"`
}

func (*SignalRequest_Process) isSignalRequest_Payload() {}

func (*SignalRequest_RecordStart) isSignalRequest_Payload() {}

func (*SignalRequest_RecordStop) isSignalRequest_Payload() {}

type SignalReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignalReply) Reset() {
	*x = SignalReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_signal_grpc_proto_avp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalReply) ProtoMessage() {}

func (x *SignalReply) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_signal_grpc_proto_avp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalReply.ProtoReflect.Descriptor instead.
func (*SignalReply) Descriptor() ([]byte, []int) {
	return file_cmd_signal_grpc_proto_avp_proto_rawDescGZIP(), []int{1}
}

// Process describes an a/v process
type Process struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sfu    string `protobuf:"bytes,1,opt,name=sfu,proto3" json:"sfu,omitempty"` // media sfu
	Pid    string `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"` // pipeline id
	Sid    string `protobuf:"bytes,3,opt,name=sid,proto3" json:"sid,omitempty"` // session id
	Tid    string `protobuf:"bytes,4,opt,name=tid,proto3" json:"tid,omitempty"` // track id
	Eid    string `protobuf:"bytes,5,opt,name=eid,proto3" json:"eid,omitempty"` // element id
	Config []byte `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Process) Reset() {
	*x = Process{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_signal_grpc_proto_avp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Process) ProtoMessage() {}

func (x *Process) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_signal_grpc_proto_avp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Process.ProtoReflect.Descriptor instead.
func (*Process) Descriptor() ([]byte, []int) {
	return file_cmd_signal_grpc_proto_avp_proto_rawDescGZIP(), []int{2}
}

func (x *Process) GetSfu() string {
	if x != nil {
		return x.Sfu
	}
	return ""
}

func (x *Process) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *Process) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *Process) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *Process) GetEid() string {
	if x != nil {
		return x.Eid
	}
	return ""
}

func (x *Process) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

// Record a track to disk
type RecordStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sfu string        `protobuf:"bytes,1,opt,name=sfu,proto3" json:"sfu,omitempty"` // media sfu address
	Sid string        `protobuf:"bytes,2,opt,name=sid,proto3" json:"sid,omitempty"` // session id
	Tid string        `protobuf:"bytes,3,opt,name=tid,proto3" json:"tid,omitempty"` // track id
	Cfg *RecordConfig `protobuf:"bytes,4,opt,name=cfg,proto3" json:"cfg,omitempty"` // everything we need to configure on the recording
}

func (x *RecordStart) Reset() {
	*x = RecordStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_signal_grpc_proto_avp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordStart) ProtoMessage() {}

func (x *RecordStart) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_signal_grpc_proto_avp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordStart.ProtoReflect.Descriptor instead.
func (*RecordStart) Descriptor() ([]byte, []int) {
	return file_cmd_signal_grpc_proto_avp_proto_rawDescGZIP(), []int{3}
}

func (x *RecordStart) GetSfu() string {
	if x != nil {
		return x.Sfu
	}
	return ""
}

func (x *RecordStart) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *RecordStart) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *RecordStart) GetCfg() *RecordConfig {
	if x != nil {
		return x.Cfg
	}
	return nil
}

// Stop recording a track. Ensures recording gets flushed to disk.
type RecordStop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sfu string `protobuf:"bytes,1,opt,name=sfu,proto3" json:"sfu,omitempty"` // media sfu address
	Sid string `protobuf:"bytes,2,opt,name=sid,proto3" json:"sid,omitempty"` // session id
	Tid string `protobuf:"bytes,3,opt,name=tid,proto3" json:"tid,omitempty"` // track id
}

func (x *RecordStop) Reset() {
	*x = RecordStop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_signal_grpc_proto_avp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordStop) ProtoMessage() {}

func (x *RecordStop) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_signal_grpc_proto_avp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordStop.ProtoReflect.Descriptor instead.
func (*RecordStop) Descriptor() ([]byte, []int) {
	return file_cmd_signal_grpc_proto_avp_proto_rawDescGZIP(), []int{4}
}

func (x *RecordStop) GetSfu() string {
	if x != nil {
		return x.Sfu
	}
	return ""
}

func (x *RecordStop) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *RecordStop) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

type RecordConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format     RecordConfig_Format `protobuf:"varint,1,opt,name=format,proto3,enum=avp.RecordConfig_Format" json:"format,omitempty"`
	Filename   string              `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` // full path to write recording to
	Audio      RecordConfig_Audio  `protobuf:"varint,3,opt,name=audio,proto3,enum=avp.RecordConfig_Audio" json:"audio,omitempty"`
	Video      RecordConfig_Video  `protobuf:"varint,4,opt,name=video,proto3,enum=avp.RecordConfig_Video" json:"video,omitempty"`
	Buffersize uint64              `protobuf:"varint,5,opt,name=buffersize,proto3" json:"buffersize,omitempty"` // in bytes
}

func (x *RecordConfig) Reset() {
	*x = RecordConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_signal_grpc_proto_avp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordConfig) ProtoMessage() {}

func (x *RecordConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_signal_grpc_proto_avp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordConfig.ProtoReflect.Descriptor instead.
func (*RecordConfig) Descriptor() ([]byte, []int) {
	return file_cmd_signal_grpc_proto_avp_proto_rawDescGZIP(), []int{5}
}

func (x *RecordConfig) GetFormat() RecordConfig_Format {
	if x != nil {
		return x.Format
	}
	return RecordConfig_WEBM
}

func (x *RecordConfig) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *RecordConfig) GetAudio() RecordConfig_Audio {
	if x != nil {
		return x.Audio
	}
	return RecordConfig_AUDIO_OFF
}

func (x *RecordConfig) GetVideo() RecordConfig_Video {
	if x != nil {
		return x.Video
	}
	return RecordConfig_VIDEO_OFF
}

func (x *RecordConfig) GetBuffersize() uint64 {
	if x != nil {
		return x.Buffersize
	}
	return 0
}

var File_cmd_signal_grpc_proto_avp_proto protoreflect.FileDescriptor

var file_cmd_signal_grpc_proto_avp_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x76, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x61, 0x76, 0x70, 0x22, 0xad, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x76, 0x70, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x76, 0x70, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61,
	0x76, 0x70, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x48, 0x00, 0x52,
	0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x09, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x7b, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x66, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x66, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x68, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x66, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x66, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x76, 0x70, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x63, 0x66, 0x67, 0x22, 0x42, 0x0a, 0x0a,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x66,
	0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x66, 0x75, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64,
	0x22, 0xce, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x61, 0x76, 0x70, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2d, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x61, 0x76, 0x70, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x2d,
	0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x61, 0x76, 0x70, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x12, 0x0a,
	0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x45, 0x42, 0x4d, 0x10,
	0x00, 0x22, 0x38, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x55,
	0x44, 0x49, 0x4f, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x55, 0x44,
	0x49, 0x4f, 0x5f, 0x4d, 0x4f, 0x4e, 0x4f, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x55, 0x44,
	0x49, 0x4f, 0x5f, 0x53, 0x54, 0x45, 0x52, 0x45, 0x4f, 0x10, 0x02, 0x22, 0x24, 0x0a, 0x05, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x4f, 0x46,
	0x46, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x4f, 0x4e, 0x10,
	0x01, 0x32, 0x3b, 0x0a, 0x03, 0x41, 0x56, 0x50, 0x12, 0x34, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x12, 0x12, 0x2e, 0x61, 0x76, 0x70, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x61, 0x76, 0x70, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x2f,
	0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x6f,
	0x6e, 0x2f, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x76, 0x70, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_signal_grpc_proto_avp_proto_rawDescOnce sync.Once
	file_cmd_signal_grpc_proto_avp_proto_rawDescData = file_cmd_signal_grpc_proto_avp_proto_rawDesc
)

func file_cmd_signal_grpc_proto_avp_proto_rawDescGZIP() []byte {
	file_cmd_signal_grpc_proto_avp_proto_rawDescOnce.Do(func() {
		file_cmd_signal_grpc_proto_avp_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_signal_grpc_proto_avp_proto_rawDescData)
	})
	return file_cmd_signal_grpc_proto_avp_proto_rawDescData
}

var file_cmd_signal_grpc_proto_avp_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_cmd_signal_grpc_proto_avp_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_cmd_signal_grpc_proto_avp_proto_goTypes = []interface{}{
	(RecordConfig_Format)(0), // 0: avp.RecordConfig.Format
	(RecordConfig_Audio)(0),  // 1: avp.RecordConfig.Audio
	(RecordConfig_Video)(0),  // 2: avp.RecordConfig.Video
	(*SignalRequest)(nil),    // 3: avp.SignalRequest
	(*SignalReply)(nil),      // 4: avp.SignalReply
	(*Process)(nil),          // 5: avp.Process
	(*RecordStart)(nil),      // 6: avp.RecordStart
	(*RecordStop)(nil),       // 7: avp.RecordStop
	(*RecordConfig)(nil),     // 8: avp.RecordConfig
}
var file_cmd_signal_grpc_proto_avp_proto_depIdxs = []int32{
	5, // 0: avp.SignalRequest.process:type_name -> avp.Process
	6, // 1: avp.SignalRequest.recordStart:type_name -> avp.RecordStart
	7, // 2: avp.SignalRequest.recordStop:type_name -> avp.RecordStop
	8, // 3: avp.RecordStart.cfg:type_name -> avp.RecordConfig
	0, // 4: avp.RecordConfig.format:type_name -> avp.RecordConfig.Format
	1, // 5: avp.RecordConfig.audio:type_name -> avp.RecordConfig.Audio
	2, // 6: avp.RecordConfig.video:type_name -> avp.RecordConfig.Video
	3, // 7: avp.AVP.Signal:input_type -> avp.SignalRequest
	4, // 8: avp.AVP.Signal:output_type -> avp.SignalReply
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_cmd_signal_grpc_proto_avp_proto_init() }
func file_cmd_signal_grpc_proto_avp_proto_init() {
	if File_cmd_signal_grpc_proto_avp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cmd_signal_grpc_proto_avp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_signal_grpc_proto_avp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_signal_grpc_proto_avp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Process); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_signal_grpc_proto_avp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_signal_grpc_proto_avp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordStop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_signal_grpc_proto_avp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cmd_signal_grpc_proto_avp_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SignalRequest_Process)(nil),
		(*SignalRequest_RecordStart)(nil),
		(*SignalRequest_RecordStop)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_signal_grpc_proto_avp_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cmd_signal_grpc_proto_avp_proto_goTypes,
		DependencyIndexes: file_cmd_signal_grpc_proto_avp_proto_depIdxs,
		EnumInfos:         file_cmd_signal_grpc_proto_avp_proto_enumTypes,
		MessageInfos:      file_cmd_signal_grpc_proto_avp_proto_msgTypes,
	}.Build()
	File_cmd_signal_grpc_proto_avp_proto = out.File
	file_cmd_signal_grpc_proto_avp_proto_rawDesc = nil
	file_cmd_signal_grpc_proto_avp_proto_goTypes = nil
	file_cmd_signal_grpc_proto_avp_proto_depIdxs = nil
}
